<Project>
  <Name>Step3-SemanticActions</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Step3-Diagram</Name>
    <Language>Java</Language>
    <Entities>
      <Entity type="Class">
        <Name>LITTLEScopeListener</Name>
        <Access>Public</Access>
        <Location left="1027" top="695" />
        <Size width="385" height="519" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Stack&lt;String&gt; scopes</Member>
        <Member type="Field">private LinkedHashMap&lt;String, LinkedHashMap&lt;String, String&gt;&gt; symbol_table</Member>
        <Member type="Field">private LinkedHashMap&lt;String, String&gt; current_symbol_table</Member>
        <Member type="Field">private int block</Member>
        <Member type="Field">private boolean did_error</Member>
        <Member type="Field">private ArrayList&lt;String&gt; error_messages</Member>
        <Member type="Constructor">public LITTLEScopeListener()</Member>
        <Member type="Method">public void increment_scope(String name)</Member>
        <Member type="Method">public void decrement_scope()</Member>
        <Member type="Method">public void enterProgram(LITTLEParser.ProgramContext ctx)</Member>
        <Member type="Method">public void exitProgram(LITTLEParser.ProgramContext ctx)</Member>
        <Member type="Method">public void enterString_decl(LITTLEParser.String_declContext ctx)</Member>
        <Member type="Method">public void enterVar_decl(LITTLEParser.Var_declContext ctx)</Member>
        <Member type="Method">private void param_decl_list_recursive(ParseTree tree)</Member>
        <Member type="Method">private void add_param_decl_to_symbol_table(ParseTree tree)</Member>
        <Member type="Method">public void enterParam_decl_list(LITTLEParser.Param_decl_listContext ctx)</Member>
        <Member type="Method">public void enterFunc_decl(LITTLEParser.Func_declContext ctx)</Member>
        <Member type="Method">public void exitFunc_decl(LITTLEParser.Func_declContext ctx)</Member>
        <Member type="Method">public void enterIf_stmt(LITTLEParser.If_stmtContext ctx)</Member>
        <Member type="Method">public void exitIf_stmt(LITTLEParser.If_stmtContext ctx)</Member>
        <Member type="Method">public void enterElse_part(LITTLEParser.Else_partContext ctx)</Member>
        <Member type="Method">public void exitElse_part(LITTLEParser.Else_partContext ctx)</Member>
        <Member type="Method">public void enterWhile_stmt(LITTLEParser.While_stmtContext ctx)</Member>
        <Member type="Method">public void exitWhile_stmt(LITTLEParser.While_stmtContext ctx)</Member>
        <Member type="Method">protected boolean did_error()</Member>
        <Member type="Method">protected void print_symbol_tables()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LITTLEBaseListener</Name>
        <Access>Public</Access>
        <Location left="1027" top="70" />
        <Size width="385" height="402" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void enterProgram(LITTLEParser.ProgramContext ctx)</Member>
        <Member type="Method">public void exitProgram(LITTLEParser.ProgramContext ctx)</Member>
        <Member type="Method">public void enterString_decl(LITTLEParser.String_declContext ctx)</Member>
        <Member type="Method">public void exitString_decl(LITTLEParser.String_declContext ctx)</Member>
        <Member type="Method">public void enterVar_decl(LITTLEParser.Var_declContext ctx)</Member>
        <Member type="Method">public void exitVar_decl(LITTLEParser.Var_declContext ctx)</Member>
        <Member type="Method">public void enterParam_decl_list(LITTLEParser.Param_decl_listContext ctx)</Member>
        <Member type="Method">public void exitParam_decl_list(LITTLEParser.Param_decl_listContext ctx)</Member>
        <Member type="Method">public void enterFunc_decl(LITTLEParser.Func_declContext ctx)</Member>
        <Member type="Method">public void exitFunc_decl(LITTLEParser.Func_declContext ctx)</Member>
        <Member type="Method">public void enterIf_stmt(LITTLEParser.If_stmtContext ctx)</Member>
        <Member type="Method">public void exitIf_stmt(LITTLEParser.If_stmtContext ctx)</Member>
        <Member type="Method">public void enterElse_part(LITTLEParser.Else_partContext ctx)</Member>
        <Member type="Method">public void exitElse_part(LITTLEParser.Else_partContext ctx)</Member>
        <Member type="Method">public void enterWhile_stmt(LITTLEParser.While_stmtContext ctx)</Member>
        <Member type="Method">public void exitWhile_stmt(LITTLEParser.While_stmtContext ctx)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LITTLECompiler</Name>
        <Access>Public</Access>
        <Location left="441" top="695" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void main(String[] args)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ParseTreeWalker</Name>
        <Access>Public</Access>
        <Location left="369" top="1011" />
        <Size width="307" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void walk(LITTLEScopeListener scopeListener, bool b)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>